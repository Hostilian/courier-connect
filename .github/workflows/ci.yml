name: CI

on:
  push:
    branches: [main, develop, itirations]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript check
        run: npm run type-check

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-typecheck

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXT_PUBLIC_APP_URL: https://hostilian.org

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next
          retention-days: 7

  verify-translations:
    name: Verify Translations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify all translation files exist
        run: |
          echo "Checking translation files..."
          for locale in en cs de es fr it pl pt ru tr uk vi ar zh; do
            if [ ! -f "messages/$locale.json" ]; then
              echo "‚ùå Missing translation file: messages/$locale.json"
              exit 1
            else
              echo "‚úÖ Found messages/$locale.json"
            fi
          done

      - name: Verify translation keys consistency
        run: |
          node -e "
          const fs = require('fs');
          const path = require('path');
          
          const enKeys = JSON.parse(fs.readFileSync('messages/en.json', 'utf8'));
          const locales = ['cs', 'de', 'es', 'fr', 'it', 'pl', 'pt', 'ru', 'tr', 'uk', 'vi', 'ar', 'zh'];
          
          function getAllKeys(obj, prefix = '') {
            let keys = [];
            for (let key in obj) {
              const fullKey = prefix ? \`\${prefix}.\${key}\` : key;
              if (typeof obj[key] === 'object' && obj[key] !== null) {
                keys = keys.concat(getAllKeys(obj[key], fullKey));
              } else {
                keys.push(fullKey);
              }
            }
            return keys;
          }
          
          const enKeyList = getAllKeys(enKeys);
          console.log(\`üìã Base English keys: \${enKeyList.length}\`);
          
          let hasErrors = false;
          for (const locale of locales) {
            try {
              const localeKeys = JSON.parse(fs.readFileSync(\`messages/\${locale}.json\`, 'utf8'));
              const localeKeyList = getAllKeys(localeKeys);
              const missing = enKeyList.filter(k => !localeKeyList.includes(k));
              
              if (missing.length > 0) {
                console.log(\`‚ö†Ô∏è  \${locale}: Missing \${missing.length} keys (will use English fallback)\`);
              } else {
                console.log(\`‚úÖ \${locale}: All keys present\`);
              }
            } catch (e) {
              console.error(\`‚ùå \${locale}: Error reading file\`, e.message);
              hasErrors = true;
            }
          }
          
          if (hasErrors) process.exit(1);
          "
