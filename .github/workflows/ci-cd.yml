name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop, itirations ]
  pull_request:
    branches: [ master, main, develop, itirations ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  MONGODB_URI_TEST: mongodb://localhost:27017/courier-connect-test
  JWT_SECRET_TEST: test-jwt-secret-key-for-ci-builds-only-minimum-32-characters-required

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: TypeScript Check
        run: npm run type-check
      
      - name: Lint
        run: npm run lint

  build-and-test:
    name: Build
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
        env:
          MONGODB_URI: ${{ env.MONGODB_URI_TEST }}
          JWT_SECRET: ${{ env.JWT_SECRET_TEST }}
          NODE_ENV: production
      
      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: .next
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel
        run: echo "Deploy preview when configured"
  
  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Deploy to Vercel
        run: echo "Deploy production when configured"
